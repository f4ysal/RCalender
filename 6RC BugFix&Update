<!DOCTYPE html>
<html lang="bn">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>‡¶™‡ßç‡¶∞‡¶ø‡¶Æ‡¶ø‡ßü‡¶æ‡¶Æ ‡¶ï‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶°‡¶æ‡¶∞ - ‡¶°‡ßá‡¶á‡¶≤‡¶ø ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶® ‡¶ü‡ßç‡¶∞‡ßç‡¶Ø‡¶æ‡¶ï‡¶æ‡¶∞</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        :root {
            --primary-color: #007AFF;
            --secondary-color: #5856D6;
            --success-color: #34C759;
            --warning-color: #FF9500;
            --danger-color: #FF3B30;
            --bg-primary: #FFFFFF;
            --bg-secondary: #F2F2F7;
            --bg-tertiary: #FFFFFF;
            --text-primary: #000000;
            --text-secondary: #8E8E93;
            --border-color: #C6C6C8;
            --shadow-light: rgba(0, 0, 0, 0.1);
            --shadow-medium: rgba(0, 0, 0, 0.15);
            --shadow-heavy: rgba(0, 0, 0, 0.2);
            --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

        [data-theme="dark"] {
            --primary-color: #0A84FF;
            --secondary-color: #5E5CE6;
            --success-color: #30D158;
            --warning-color: #FF9F0A;
            --danger-color: #FF453A;
            --bg-primary: #000000;
            --bg-secondary: #1C1C1E;
            --bg-tertiary: #2C2C2E;
            --text-primary: #FFFFFF;
            --text-secondary: #8E8E93;
            --border-color: #38383A;
            --shadow-light: rgba(255, 255, 255, 0.05);
            --shadow-medium: rgba(255, 255, 255, 0.1);
            --shadow-heavy: rgba(255, 255, 255, 0.15);
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
            background: var(--bg-primary);
            color: var(--text-primary);
            transition: var(--transition);
            min-height: 100vh;
            overflow-x: hidden;
            padding: 0;
            margin: 0;
        }

        /* Header */
        .header {
            background: var(--bg-tertiary);
            padding: 15px;
            box-shadow: 0 2px 10px var(--shadow-light);
            position: sticky;
            top: 0;
            z-index: 100;
            backdrop-filter: blur(20px);
            -webkit-backdrop-filter: blur(20px);
            background: rgba(var(--bg-tertiary), 0.8);
        }

        .header-content {
            max-width: 100%;
            margin: 0 auto;
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
            gap: 10px;
            padding: 0 10px;
        }

        .header h1 {
            font-size: 22px;
            font-weight: 700;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .header-controls {
            display: flex;
            gap: 10px;
            align-items: center;
            flex-wrap: wrap;
        }

        .year-selector {
            padding: 6px 12px;
            border-radius: 10px;
            border: 1px solid var(--border-color);
            background: var(--bg-secondary);
            color: var(--text-primary);
            font-size: 14px;
            cursor: pointer;
            transition: var(--transition);
        }

        .year-selector:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px var(--shadow-light);
        }

        .lang-toggle {
            padding: 6px 12px;
            border-radius: 10px;
            border: 1px solid var(--border-color);
            background: var(--bg-secondary);
            color: var(--text-primary);
            font-size: 14px;
            cursor: pointer;
            transition: var(--transition);
            display: flex;
            align-items: center;
            gap: 6px;
        }

        .lang-toggle:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px var(--shadow-light);
            background: var(--primary-color);
            color: white;
            border-color: var(--primary-color);
        }

        .theme-toggle {
            width: 44px;
            height: 24px;
            background: var(--bg-secondary);
            border-radius: 20px;
            position: relative;
            cursor: pointer;
            transition: var(--transition);
            border: 1px solid var(--border-color);
        }

        .theme-toggle::before {
            content: 'üåô';
            position: absolute;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background: var(--primary-color);
            top: 1px;
            left: 1px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 12px;
            transition: var(--transition);
        }

        [data-theme="dark"] .theme-toggle::before {
            content: '‚òÄÔ∏è';
            transform: translateX(20px);
        }

        /* Main Container */
        .container {
            max-width: 100%;
            margin: 20px auto;
            padding: 0 10px;
        }

        /* Calendar Navigation */
        .calendar-nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding: 15px;
            background: var(--bg-tertiary);
            border-radius: 16px;
            box-shadow: 0 4px 20px var(--shadow-light);
        }

        .nav-button {
            width: 36px;
            height: 36px;
            border-radius: 50%;
            border: none;
            background: var(--primary-color);
            color: white;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: var(--transition);
            font-size: 16px;
        }

        .nav-button:hover {
            transform: scale(1.1);
            box-shadow: 0 6px 20px var(--shadow-medium);
        }

        .month-year {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .month-year h2 {
            font-size: 20px;
            font-weight: 600;
        }

        .settings-btn {
            width: 36px;
            height: 36px;
            border-radius: 50%;
            border: none;
            background: var(--bg-secondary);
            color: var(--text-primary);
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: var(--transition);
            font-size: 16px;
        }

        .settings-btn:hover {
            transform: rotate(90deg);
            background: var(--primary-color);
            color: white;
        }

        /* Calendar Grid */
        .calendar {
            background: var(--bg-tertiary);
            border-radius: 16px;
            padding: 15px;
            box-shadow: 0 4px 20px var(--shadow-light);
            overflow: hidden;
        }

        .calendar-grid {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 5px;
        }

        .day-header {
            text-align: center;
            font-weight: 600;
            color: var(--text-secondary);
            padding: 8px 4px;
            font-size: 12px;
        }

        .calendar-day {
            aspect-ratio: 1;
            border-radius: 10px;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: var(--transition);
            position: relative;
            background: var(--bg-secondary);
            border: 2px solid transparent;
            min-height: 45px;
        }

        .calendar-day:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px var(--shadow-medium);
            border-color: var(--primary-color);
        }

        .calendar-day.today {
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            font-weight: 600;
        }

        .calendar-day.other-month {
            opacity: 0.3;
        }

        .calendar-day.has-tasks::after {
            content: '';
            position: absolute;
            bottom: 3px;
            width: 5px;
            height: 5px;
            background: var(--success-color);
            border-radius: 50%;
        }

        .day-number {
            font-size: 16px;
            font-weight: 500;
        }

        .day-bangla {
            font-size: 10px;
            opacity: 0.7;
            margin-top: 1px;
        }

        /* Modal */
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            backdrop-filter: blur(10px);
            z-index: 1000;
            animation: fadeIn 0.3s ease;
        }

        .modal.active {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        @keyframes slideUp {
            from { transform: translateY(50px); opacity: 0; }
            to { transform: translateY(0); opacity: 1; }
        }

        .modal-content {
            background: var(--bg-tertiary);
            border-radius: 20px;
            width: 95%;
            max-width: 900px;
            max-height: 90vh;
            overflow: hidden;
            animation: slideUp 0.3s ease;
            box-shadow: 0 20px 60px var(--shadow-heavy);
        }

        .modal-header {
            padding: 20px;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .modal-header h3 {
            font-size: 20px;
            font-weight: 600;
        }

        .close-modal {
            width: 32px;
            height: 32px;
            border-radius: 50%;
            background: rgba(255, 255, 255, 0.2);
            border: none;
            color: white;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: var(--transition);
            font-size: 18px;
        }

        .close-modal:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: rotate(90deg);
        }

        .modal-body {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
            padding: 20px;
            max-height: calc(90vh - 80px);
            overflow-y: auto;
        }

        /* Prayer Section - New Tile Layout */
        .prayer-section {
            background: var(--bg-secondary);
            border-radius: 14px;
            padding: 15px;
        }

        .section-title {
            font-size: 16px;
            font-weight: 600;
            margin-bottom: 15px;
            color: var(--primary-color);
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .prayer-tiles-container {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 12px;
        }

        .fard-prayers {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .other-prayers {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .prayer-tile {
            background: var(--bg-tertiary);
            border-radius: 10px;
            padding: 12px;
            transition: var(--transition);
            border: 2px solid transparent;
        }

        .prayer-tile:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px var(--shadow-light);
            border-color: var(--primary-color);
        }

        .prayer-tile.fard {
            background: linear-gradient(135deg, rgba(0, 122, 255, 0.1), rgba(88, 86, 214, 0.1));
            border-left: 3px solid var(--primary-color);
        }

        .prayer-tile.sunnah {
            background: linear-gradient(135deg, rgba(52, 199, 89, 0.1), rgba(48, 209, 88, 0.1));
            border-left: 3px solid var(--success-color);
        }

        .prayer-tile.nafil {
            background: linear-gradient(135deg, rgba(255, 149, 0, 0.1), rgba(255, 159, 10, 0.1));
            border-left: 3px solid var(--warning-color);
        }

        .prayer-time {
            font-size: 13px;
            font-weight: 600;
            color: var(--text-secondary);
            margin-bottom: 6px;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }

        .prayer-items {
            display: flex;
            flex-direction: column;
            gap: 6px;
        }

        .prayer-item {
            display: flex;
            align-items: center;
            gap: 8px;
        }

        .prayer-checkbox {
            width: 18px;
            height: 18px;
            cursor: pointer;
            accent-color: var(--success-color);
        }

        .prayer-label {
            font-size: 14px;
            cursor: pointer;
            user-select: none;
            flex: 1;
        }

        .tahajjud-counter {
            display: flex;
            align-items: center;
            gap: 6px;
            margin-top: 4px;
        }

        .counter-btn {
            width: 24px;
            height: 24px;
            border-radius: 5px;
            border: none;
            background: var(--primary-color);
            color: white;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: var(--transition);
            font-size: 11px;
        }

        .counter-btn:hover {
            transform: scale(1.1);
            background: var(--secondary-color);
        }

        .counter-value {
            min-width: 20px;
            text-align: center;
            font-weight: 600;
            color: var(--primary-color);
            font-size: 13px;
        }

        /* Routine Section */
        .routine-section {
            background: var(--bg-secondary);
            border-radius: 14px;
            padding: 15px;
        }

        .routine-periods {
            display: flex;
            flex-direction: column;
            gap: 12px;
        }

        .routine-period {
            background: var(--bg-tertiary);
            border-radius: 10px;
            padding: 12px;
            transition: var(--transition);
        }

        .routine-period:hover {
            box-shadow: 0 4px 12px var(--shadow-light);
        }

        .period-header {
            display: flex;
            align-items: center;
            gap: 8px;
            margin-bottom: 8px;
            font-weight: 600;
            color: var(--secondary-color);
            font-size: 14px;
        }

        .routine-item {
            display: flex;
            align-items: flex-start;
            gap: 10px;
            margin-bottom: 8px;
        }

        .routine-checkbox {
            width: 18px;
            height: 18px;
            cursor: pointer;
            accent-color: var(--success-color);
            margin-top: 2px;
            flex-shrink: 0;
        }

        .routine-content {
            flex: 1;
        }

        .routine-input {
            width: 100%;
            padding: 8px;
            border: 1px solid var(--border-color);
            border-radius: 6px;
            background: var(--bg-secondary);
            color: var(--text-primary);
            font-size: 13px;
            transition: var(--transition);
            resize: vertical;
            min-height: 50px;
        }

        .routine-input:focus {
            outline: none;
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(0, 122, 255, 0.1);
        }

        .routine-text {
            font-size: 13px;
            line-height: 1.4;
            color: var(--text-primary);
            white-space: pre-wrap;
            word-wrap: break-word;
        }

        /* Settings Modal */
        .settings-modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            backdrop-filter: blur(10px);
            z-index: 1001;
        }

        .settings-modal.active {
            display: flex;
            align-items: center;
            justify-content: center;
        }

        .settings-content {
            background: var(--bg-tertiary);
            border-radius: 20px;
            width: 95%;
            max-width: 600px;
            max-height: 85vh;
            overflow: hidden;
            animation: slideUp 0.3s ease;
        }

        .settings-body {
            padding: 20px;
            max-height: calc(85vh - 80px);
            overflow-y: auto;
        }

        .week-days {
            display: grid;
            grid-template-columns: repeat(7, 1fr);
            gap: 8px;
            margin-bottom: 15px;
        }

        .day-tab {
            padding: 8px;
            text-align: center;
            border-radius: 8px;
            background: var(--bg-secondary);
            cursor: pointer;
            transition: var(--transition);
            font-weight: 500;
            font-size: 13px;
        }

        .day-tab.active {
            background: var(--primary-color);
            color: white;
        }

        .day-tab:hover {
            transform: translateY(-2px);
        }

        .routine-editor {
            display: flex;
            flex-direction: column;
            gap: 12px;
        }

        .editor-period {
            background: var(--bg-secondary);
            border-radius: 10px;
            padding: 12px;
        }

        .save-btn {
            width: 100%;
            padding: 12px;
            border: none;
            border-radius: 10px;
            background: linear-gradient(135deg, var(--primary-color), var(--secondary-color));
            color: white;
            font-size: 15px;
            font-weight: 600;
            cursor: pointer;
            transition: var(--transition);
            margin-top: 15px;
        }

        .save-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px var(--shadow-medium);
        }

        /* Toast Notification */
        .toast {
            position: fixed;
            bottom: 20px;
            right: 20px;
            background: var(--bg-tertiary);
            color: var(--text-primary);
            padding: 12px 20px;
            border-radius: 10px;
            box-shadow: 0 4px 20px var(--shadow-heavy);
            display: none;
            align-items: center;
            gap: 8px;
            animation: slideInRight 0.3s ease;
            z-index: 2000;
            max-width: calc(100% - 40px);
        }

        .toast.show {
            display: flex;
        }

        @keyframes slideInRight {
            from { transform: translateX(100px); opacity: 0; }
            to { transform: translateX(0); opacity: 1; }
        }

        /* Responsive Design */
        @media (max-width: 768px) {
            .modal-body {
                grid-template-columns: 1fr;
            }
            
            .prayer-tiles-container {
                grid-template-columns: 1fr;
            }
            
            .calendar-grid {
                gap: 3px;
            }
            
            .calendar-day {
                font-size: 12px;
                min-height: 40px;
            }
            
            .header h1 {
                font-size: 18px;
            }

            .header-controls {
                flex-wrap: wrap;
            }

            .week-days {
                grid-template-columns: repeat(4, 1fr);
            }

            .day-header {
                font-size: 11px;
                padding: 6px 2px;
            }

            .modal-content {
                width: 98%;
                border-radius: 16px;
            }

            .modal-header {
                padding: 15px;
            }

            .modal-header h3 {
                font-size: 18px;
            }

            .modal-body {
                padding: 15px;
            }
        }

        @media (max-width: 480px) {
            .header-content {
                padding: 0 5px;
            }

            .container {
                padding: 0 5px;
            }

            .calendar-nav {
                padding: 10px;
            }

            .calendar {
                padding: 10px;
            }

            .month-year h2 {
                font-size: 16px;
            }

            .nav-button, .settings-btn {
                width: 32px;
                height: 32px;
                font-size: 14px;
            }
        }

        /* Scrollbar Styling */
        ::-webkit-scrollbar {
            width: 6px;
            height: 6px;
        }

        ::-webkit-scrollbar-track {
            background: var(--bg-secondary);
            border-radius: 10px;
        }

        ::-webkit-scrollbar-thumb {
            background: var(--primary-color);
            border-radius: 10px;
        }

        ::-webkit-scrollbar-thumb:hover {
            background: var(--secondary-color);
        }
    </style>
</head>
<body>
    <!-- Header -->
    <header class="header">
        <div class="header-content">
            <h1><i class="fas fa-calendar-alt"></i> <span data-lang="app-title">‡¶™‡ßç‡¶∞‡¶ø‡¶Æ‡¶ø‡ßü‡¶æ‡¶Æ ‡¶ï‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶°‡¶æ‡¶∞</span></h1>
            <div class="header-controls">
                <select class="year-selector" id="yearSelector">
                    <option value="2024">‡ß®‡ß¶‡ß®‡ß™</option>
                    <option value="2025">‡ß®‡ß¶‡ß®‡ß´</option>
                    <option value="2026">‡ß®‡ß¶‡ß®‡ß¨</option>
                    <option value="2027">‡ß®‡ß¶‡ß®‡ß≠</option>
                </select>
                <button class="lang-toggle" id="langToggle">
                    <i class="fas fa-globe"></i>
                    <span id="langText">EN</span>
                </button>
                <div class="theme-toggle" id="themeToggle"></div>
            </div>
        </div>
    </header>

    <!-- Main Container -->
    <main class="container">
        <!-- Calendar Navigation -->
        <div class="calendar-nav">
            <button class="nav-button" id="prevMonth">
                <i class="fas fa-chevron-left"></i>
            </button>
            <div class="month-year">
                <h2 id="currentMonth">‡¶Ö‡¶ï‡ßç‡¶ü‡ßã‡¶¨‡¶∞ ‡ß®‡ß¶‡ß®‡ß´</h2>
                <button class="settings-btn" id="monthSettings">
                    <i class="fas fa-cog"></i>
                </button>
            </div>
            <button class="nav-button" id="nextMonth">
                <i class="fas fa-chevron-right"></i>
            </button>
        </div>

        <!-- Calendar Grid -->
        <div class="calendar">
            <div class="calendar-grid" id="calendarGrid">
                <!-- Calendar will be generated here -->
            </div>
        </div>
    </main>

    <!-- Daily Task Modal -->
    <div class="modal" id="dailyModal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 id="modalDate">‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ: ‡ßß‡ß™ ‡¶Ö‡¶ï‡ßç‡¶ü‡ßã‡¶¨‡¶∞ ‡ß®‡ß¶‡ß®‡ß´</h3>
                <button class="close-modal" id="closeModal">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="modal-body">
                <!-- Prayer Section - New Tile Layout -->
                <div class="prayer-section">
                    <h4 class="section-title">
                        <i class="fas fa-pray"></i>
                        <span data-lang="prayer-checklist">‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú‡ßá‡¶∞ ‡¶ö‡ßá‡¶ï‡¶≤‡¶ø‡¶∏‡ßç‡¶ü</span>
                    </h4>
                    <div class="prayer-tiles-container">
                        <!-- Fard Prayers Column -->
                        <div class="fard-prayers">
                            <div class="prayer-tile fard">
                                <div class="prayer-time" data-lang="fajr-time">‡¶´‡¶ú‡¶∞</div>
                                <div class="prayer-items">
                                    <div class="prayer-item">
                                        <input type="checkbox" class="prayer-checkbox" id="fajr">
                                        <label for="fajr" class="prayer-label" data-lang="fajr-fard">‡¶´‡¶∞‡¶ú</label>
                                    </div>
                                    <div class="prayer-item">
                                        <input type="checkbox" class="prayer-checkbox" id="fajrSunnah">
                                        <label for="fajrSunnah" class="prayer-label" data-lang="fajr-sunnah">‡¶∏‡ßÅ‡¶®‡ßç‡¶®‡¶§</label>
                                    </div>
                                </div>
                            </div>

                            <div class="prayer-tile fard">
                                <div class="prayer-time" data-lang="dhuhr-time">‡¶Ø‡ßã‡¶π‡¶∞</div>
                                <div class="prayer-items">
                                    <div class="prayer-item">
                                        <input type="checkbox" class="prayer-checkbox" id="dhuhr">
                                        <label for="dhuhr" class="prayer-label" data-lang="dhuhr-fard">‡¶´‡¶∞‡¶ú</label>
                                    </div>
                                    <div class="prayer-item">
                                        <input type="checkbox" class="prayer-checkbox" id="dhuhrSunnah">
                                        <label for="dhuhrSunnah" class="prayer-label" data-lang="dhuhr-sunnah">‡¶∏‡ßÅ‡¶®‡ßç‡¶®‡¶§</label>
                                    </div>
                                </div>
                            </div>

                            <div class="prayer-tile fard">
                                <div class="prayer-time" data-lang="asr-time">‡¶Ü‡¶∏‡¶∞</div>
                                <div class="prayer-items">
                                    <div class="prayer-item">
                                        <input type="checkbox" class="prayer-checkbox" id="asr">
                                        <label for="asr" class="prayer-label" data-lang="asr-fard">‡¶´‡¶∞‡¶ú</label>
                                    </div>
                                    <div class="prayer-item">
                                        <input type="checkbox" class="prayer-checkbox" id="asrSunnah">
                                        <label for="asrSunnah" class="prayer-label" data-lang="asr-sunnah">‡¶∏‡ßÅ‡¶®‡ßç‡¶®‡¶§</label>
                                    </div>
                                </div>
                            </div>

                            <div class="prayer-tile fard">
                                <div class="prayer-time" data-lang="maghrib-time">‡¶Æ‡¶æ‡¶ó‡¶∞‡¶ø‡¶¨</div>
                                <div class="prayer-items">
                                    <div class="prayer-item">
                                        <input type="checkbox" class="prayer-checkbox" id="maghrib">
                                        <label for="maghrib" class="prayer-label" data-lang="maghrib-fard">‡¶´‡¶∞‡¶ú</label>
                                    </div>
                                    <div class="prayer-item">
                                        <input type="checkbox" class="prayer-checkbox" id="maghribSunnah">
                                        <label for="maghribSunnah" class="prayer-label" data-lang="maghrib-sunnah">‡¶∏‡ßÅ‡¶®‡ßç‡¶®‡¶§</label>
                                    </div>
                                </div>
                            </div>

                            <div class="prayer-tile fard">
                                <div class="prayer-time" data-lang="isha-time">‡¶á‡¶∂‡¶æ</div>
                                <div class="prayer-items">
                                    <div class="prayer-item">
                                        <input type="checkbox" class="prayer-checkbox" id="isha">
                                        <label for="isha" class="prayer-label" data-lang="isha-fard">‡¶´‡¶∞‡¶ú</label>
                                    </div>
                                    <div class="prayer-item">
                                        <input type="checkbox" class="prayer-checkbox" id="ishaSunnah">
                                        <label for="ishaSunnah" class="prayer-label" data-lang="isha-sunnah">‡¶∏‡ßÅ‡¶®‡ßç‡¶®‡¶§</label>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- Other Prayers Column -->
                        <div class="other-prayers">
                            <div class="prayer-tile sunnah">
                                <div class="prayer-time" data-lang="witr-time">‡¶¨‡¶ø‡¶§‡¶∞</div>
                                <div class="prayer-items">
                                    <div class="prayer-item">
                                        <input type="checkbox" class="prayer-checkbox" id="witr">
                                        <label for="witr" class="prayer-label" data-lang="witr">‡¶ì‡ßü‡¶æ‡¶ú‡¶ø‡¶¨</label>
                                    </div>
                                </div>
                            </div>

                            <div class="prayer-tile nafil">
                                <div class="prayer-time" data-lang="tahajjud-time">‡¶§‡¶æ‡¶π‡¶æ‡¶ú‡ßç‡¶ú‡ßÅ‡¶¶</div>
                                <div class="prayer-items">
                                    <div class="prayer-item">
                                        <input type="checkbox" class="prayer-checkbox" id="tahajjud">
                                        <label for="tahajjud" class="prayer-label" data-lang="tahajjud">‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú</label>
                                    </div>
                                    <div class="tahajjud-counter">
                                        <button class="counter-btn" id="tahajjudMinus">-</button>
                                        <span class="counter-value" id="tahajjudCount">0</span>
                                        <button class="counter-btn" id="tahajjudPlus">+2</button>
                                    </div>
                                </div>
                            </div>

                            <div class="prayer-tile sunnah">
                                <div class="prayer-time" data-lang="extra-sunnah">‡¶Ö‡¶§‡¶ø‡¶∞‡¶ø‡¶ï‡ßç‡¶§ ‡¶®‡¶´‡¶≤</div>
                                <div class="prayer-items">
                                    <div class="prayer-item">
                                        <input type="checkbox" class="prayer-checkbox" id="extraNafil">
                                        <label for="extraNafil" class="prayer-label" data-lang="extra-nafil">‡¶∏‡ßç‡¶¨‡ßá‡¶ö‡ßç‡¶õ‡¶æ‡ßü</label>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Routine Section -->
                <div class="routine-section">
                    <h4 class="section-title">
                        <i class="fas fa-tasks"></i>
                        <span data-lang="daily-routine">‡¶°‡ßá‡¶á‡¶≤‡¶ø ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶®</span>
                    </h4>
                    <div class="routine-periods">
                        <div class="routine-period">
                            <div class="period-header">
                                <i class="fas fa-sun"></i>
                                <span data-lang="dawn">‡¶≠‡ßã‡¶∞</span>
                            </div>
                            <div class="routine-item">
                                <input type="checkbox" class="routine-checkbox" id="dawnRoutineCheck">
                                <div class="routine-content">
                                    <textarea class="routine-input" id="dawnRoutine" data-lang-placeholder="dawn-placeholder" placeholder="‡¶≠‡ßã‡¶∞‡ßá‡¶∞ ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶® ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®..."></textarea>
                                </div>
                            </div>
                        </div>
                        <div class="routine-period">
                            <div class="period-header">
                                <i class="fas fa-cloud-sun"></i>
                                <span data-lang="morning">‡¶∏‡¶ï‡¶æ‡¶≤</span>
                            </div>
                            <div class="routine-item">
                                <input type="checkbox" class="routine-checkbox" id="morningRoutineCheck">
                                <div class="routine-content">
                                    <textarea class="routine-input" id="morningRoutine" data-lang-placeholder="morning-placeholder" placeholder="‡¶∏‡¶ï‡¶æ‡¶≤‡ßá‡¶∞ ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶® ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®..."></textarea>
                                </div>
                            </div>
                        </div>
                        <div class="routine-period">
                            <div class="period-header">
                                <i class="fas fa-sun"></i>
                                <span data-lang="noon">‡¶¶‡ßÅ‡¶™‡ßÅ‡¶∞</span>
                            </div>
                            <div class="routine-item">
                                <input type="checkbox" class="routine-checkbox" id="noonRoutineCheck">
                                <div class="routine-content">
                                    <textarea class="routine-input" id="noonRoutine" data-lang-placeholder="noon-placeholder" placeholder="‡¶¶‡ßÅ‡¶™‡ßÅ‡¶∞‡ßá‡¶∞ ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶® ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®..."></textarea>
                                </div>
                            </div>
                        </div>
                        <div class="routine-period">
                            <div class="period-header">
                                <i class="fas fa-cloud"></i>
                                <span data-lang="afternoon">‡¶¨‡¶ø‡¶ï‡¶æ‡¶≤</span>
                            </div>
                            <div class="routine-item">
                                <input type="checkbox" class="routine-checkbox" id="afternoonRoutineCheck">
                                <div class="routine-content">
                                    <textarea class="routine-input" id="afternoonRoutine" data-lang-placeholder="afternoon-placeholder" placeholder="‡¶¨‡¶ø‡¶ï‡¶æ‡¶≤‡ßá‡¶∞ ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶® ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®..."></textarea>
                                </div>
                            </div>
                        </div>
                        <div class="routine-period">
                            <div class="period-header">
                                <i class="fas fa-moon"></i>
                                <span data-lang="night">‡¶∞‡¶æ‡¶§</span>
                            </div>
                            <div class="routine-item">
                                <input type="checkbox" class="routine-checkbox" id="nightRoutineCheck">
                                <div class="routine-content">
                                    <textarea class="routine-input" id="nightRoutine" data-lang-placeholder="night-placeholder" placeholder="‡¶∞‡¶æ‡¶§‡ßá‡¶∞ ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶® ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®..."></textarea>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Settings Modal -->
    <div class="settings-modal" id="settingsModal">
        <div class="settings-content">
            <div class="modal-header">
                <h3 data-lang="weekly-routine-settings">‡¶∏‡¶æ‡¶™‡ßç‡¶§‡¶æ‡¶π‡¶ø‡¶ï ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶® ‡¶∏‡ßá‡¶ü‡¶ø‡¶Ç‡¶∏</h3>
                <button class="close-modal" id="closeSettings">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="settings-body">
                <div class="week-days" id="weekDays">
                    <!-- Week days will be generated here -->
                </div>
                <div class="routine-editor">
                    <div class="editor-period">
                        <div class="period-header">
                            <i class="fas fa-sun"></i>
                            <span data-lang="dawn-routine">‡¶≠‡ßã‡¶∞‡ßá‡¶∞ ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶®</span>
                        </div>
                        <textarea class="routine-input" id="editDawn" data-lang-placeholder="dawn-placeholder" placeholder="‡¶≠‡ßã‡¶∞‡ßá‡¶∞ ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶® ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®..."></textarea>
                    </div>
                    <div class="editor-period">
                        <div class="period-header">
                            <i class="fas fa-cloud-sun"></i>
                            <span data-lang="morning-routine">‡¶∏‡¶ï‡¶æ‡¶≤‡ßá‡¶∞ ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶®</span>
                        </div>
                        <textarea class="routine-input" id="editMorning" data-lang-placeholder="morning-placeholder" placeholder="‡¶∏‡¶ï‡¶æ‡¶≤‡ßá‡¶∞ ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶® ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®..."></textarea>
                    </div>
                    <div class="editor-period">
                        <div class="period-header">
                            <i class="fas fa-sun"></i>
                            <span data-lang="noon-routine">‡¶¶‡ßÅ‡¶™‡ßÅ‡¶∞‡ßá‡¶∞ ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶®</span>
                        </div>
                        <textarea class="routine-input" id="editNoon" data-lang-placeholder="noon-placeholder" placeholder="‡¶¶‡ßÅ‡¶™‡ßÅ‡¶∞‡ßá‡¶∞ ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶® ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®..."></textarea>
                    </div>
                    <div class="editor-period">
                        <div class="period-header">
                            <i class="fas fa-cloud"></i>
                            <span data-lang="afternoon-routine">‡¶¨‡¶ø‡¶ï‡¶æ‡¶≤‡ßá‡¶∞ ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶®</span>
                        </div>
                        <textarea class="routine-input" id="editAfternoon" data-lang-placeholder="afternoon-placeholder" placeholder="‡¶¨‡¶ø‡¶ï‡¶æ‡¶≤‡ßá‡¶∞ ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶® ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®..."></textarea>
                    </div>
                    <div class="editor-period">
                        <div class="period-header">
                            <i class="fas fa-moon"></i>
                            <span data-lang="night-routine">‡¶∞‡¶æ‡¶§‡ßá‡¶∞ ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶®</span>
                        </div>
                        <textarea class="routine-input" id="editNight" data-lang-placeholder="night-placeholder" placeholder="‡¶∞‡¶æ‡¶§‡ßá‡¶∞ ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶® ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®..."></textarea>
                    </div>
                </div>
                <button class="save-btn" id="saveRoutine">
                    <i class="fas fa-save"></i> <span data-lang="save-monthly">‡¶Æ‡¶æ‡¶∏‡¶¨‡ßç‡¶Ø‡¶æ‡¶™‡ßÄ ‡¶∏‡ßá‡¶≠ ‡¶ï‡¶∞‡ßÅ‡¶®</span>
                </button>
            </div>
        </div>
    </div>

    <!-- Toast Notification -->
    <div class="toast" id="toast">
        <i class="fas fa-check-circle" style="color: var(--success-color);"></i>
        <span id="toastMessage">‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶∏‡ßá‡¶≠ ‡¶π‡ßü‡ßá‡¶õ‡ßá!</span>
    </div>

    <script>
        // Language translations
        const translations = {
            bn: {
                'app-title': '‡¶™‡ßç‡¶∞‡¶ø‡¶Æ‡¶ø‡ßü‡¶æ‡¶Æ ‡¶ï‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶®‡ßç‡¶°‡¶æ‡¶∞',
                'prayer-checklist': '‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú‡ßá‡¶∞ ‡¶ö‡ßá‡¶ï‡¶≤‡¶ø‡¶∏‡ßç‡¶ü',
                'daily-routine': '‡¶°‡ßá‡¶á‡¶≤‡¶ø ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶®',
                'weekly-routine-settings': '‡¶∏‡¶æ‡¶™‡ßç‡¶§‡¶æ‡¶π‡¶ø‡¶ï ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶® ‡¶∏‡ßá‡¶ü‡¶ø‡¶Ç‡¶∏',
                'save-monthly': '‡¶Æ‡¶æ‡¶∏‡¶¨‡ßç‡¶Ø‡¶æ‡¶™‡ßÄ ‡¶∏‡ßá‡¶≠ ‡¶ï‡¶∞‡ßÅ‡¶®',
                'dawn': '‡¶≠‡ßã‡¶∞',
                'morning': '‡¶∏‡¶ï‡¶æ‡¶≤',
                'noon': '‡¶¶‡ßÅ‡¶™‡ßÅ‡¶∞',
                'afternoon': '‡¶¨‡¶ø‡¶ï‡¶æ‡¶≤',
                'night': '‡¶∞‡¶æ‡¶§',
                'dawn-routine': '‡¶≠‡ßã‡¶∞‡ßá‡¶∞ ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶®',
                'morning-routine': '‡¶∏‡¶ï‡¶æ‡¶≤‡ßá‡¶∞ ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶®',
                'noon-routine': '‡¶¶‡ßÅ‡¶™‡ßÅ‡¶∞‡ßá‡¶∞ ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶®',
                'afternoon-routine': '‡¶¨‡¶ø‡¶ï‡¶æ‡¶≤‡ßá‡¶∞ ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶®',
                'night-routine': '‡¶∞‡¶æ‡¶§‡ßá‡¶∞ ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶®',
                'dawn-placeholder': '‡¶≠‡ßã‡¶∞‡ßá‡¶∞ ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶® ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®...',
                'morning-placeholder': '‡¶∏‡¶ï‡¶æ‡¶≤‡ßá‡¶∞ ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶® ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®...',
                'noon-placeholder': '‡¶¶‡ßÅ‡¶™‡ßÅ‡¶∞‡ßá‡¶∞ ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶® ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®...',
                'afternoon-placeholder': '‡¶¨‡¶ø‡¶ï‡¶æ‡¶≤‡ßá‡¶∞ ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶® ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®...',
                'night-placeholder': '‡¶∞‡¶æ‡¶§‡ßá‡¶∞ ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶® ‡¶≤‡¶ø‡¶ñ‡ßÅ‡¶®...',
                'fajr-fard': '‡¶´‡¶∞‡¶ú',
                'fajr-sunnah': '‡¶∏‡ßÅ‡¶®‡ßç‡¶®‡¶§',
                'dhuhr-fard': '‡¶´‡¶∞‡¶ú',
                'dhuhr-sunnah': '‡¶∏‡ßÅ‡¶®‡ßç‡¶®‡¶§',
                'asr-fard': '‡¶´‡¶∞‡¶ú',
                'asr-sunnah': '‡¶∏‡ßÅ‡¶®‡ßç‡¶®‡¶§',
                'maghrib-fard': '‡¶´‡¶∞‡¶ú',
                'maghrib-sunnah': '‡¶∏‡ßÅ‡¶®‡ßç‡¶®‡¶§',
                'isha-fard': '‡¶´‡¶∞‡¶ú',
                'isha-sunnah': '‡¶∏‡ßÅ‡¶®‡ßç‡¶®‡¶§',
                'witr': '‡¶ì‡ßü‡¶æ‡¶ú‡¶ø‡¶¨',
                'tahajjud': '‡¶®‡¶æ‡¶Æ‡¶æ‡¶ú',
                'extra-nafil': '‡¶∏‡ßç‡¶¨‡ßá‡¶ö‡ßç‡¶õ‡¶æ‡ßü',
                'fajr-time': '‡¶´‡¶ú‡¶∞',
                'dhuhr-time': '‡¶Ø‡ßã‡¶π‡¶∞',
                'asr-time': '‡¶Ü‡¶∏‡¶∞',
                'maghrib-time': '‡¶Æ‡¶æ‡¶ó‡¶∞‡¶ø‡¶¨',
                'isha-time': '‡¶á‡¶∂‡¶æ',
                'witr-time': '‡¶¨‡¶ø‡¶§‡¶∞',
                'tahajjud-time': '‡¶§‡¶æ‡¶π‡¶æ‡¶ú‡ßç‡¶ú‡ßÅ‡¶¶',
                'extra-sunnah': '‡¶Ö‡¶§‡¶ø‡¶∞‡¶ø‡¶ï‡ßç‡¶§ ‡¶®‡¶´‡¶≤',
                'date': '‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ',
                'saved-successfully': '‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶∏‡ßá‡¶≠ ‡¶π‡ßü‡ßá‡¶õ‡ßá!',
                'routine-saved': '‡¶∏‡¶æ‡¶™‡ßç‡¶§‡¶æ‡¶π‡¶ø‡¶ï ‡¶∞‡ßÅ‡¶ü‡¶ø‡¶® ‡¶∏‡¶´‡¶≤‡¶≠‡¶æ‡¶¨‡ßá ‡¶∏‡ßá‡¶≠ ‡¶π‡ßü‡ßá‡¶õ‡ßá!',
                'months': ['‡¶ú‡¶æ‡¶®‡ßÅ‡ßü‡¶æ‡¶∞‡¶ø', '‡¶´‡ßá‡¶¨‡ßç‡¶∞‡ßÅ‡ßü‡¶æ‡¶∞‡¶ø', '‡¶Æ‡¶æ‡¶∞‡ßç‡¶ö', '‡¶è‡¶™‡ßç‡¶∞‡¶ø‡¶≤', '‡¶Æ‡ßá', '‡¶ú‡ßÅ‡¶®', '‡¶ú‡ßÅ‡¶≤‡¶æ‡¶á', '‡¶Ü‡¶ó‡¶∏‡ßç‡¶ü', '‡¶∏‡ßá‡¶™‡ßç‡¶ü‡ßá‡¶Æ‡ßç‡¶¨‡¶∞', '‡¶Ö‡¶ï‡ßç‡¶ü‡ßã‡¶¨‡¶∞', '‡¶®‡¶≠‡ßá‡¶Æ‡ßç‡¶¨‡¶∞', '‡¶°‡¶ø‡¶∏‡ßá‡¶Æ‡ßç‡¶¨‡¶∞'],
                'days': ['‡¶∂‡¶®‡¶ø', '‡¶∞‡¶¨‡¶ø', '‡¶∏‡ßã‡¶Æ', '‡¶Æ‡¶ô‡ßç‡¶ó‡¶≤', '‡¶¨‡ßÅ‡¶ß', '‡¶¨‡ßÉ‡¶π‡¶∏‡ßç‡¶™‡¶§‡¶ø', '‡¶∂‡ßÅ‡¶ï‡ßç‡¶∞'],
                'dayNumbers': ['‡ß¶', '‡ßß', '‡ß®', '‡ß©', '‡ß™', '‡ß´', '‡ß¨', '‡ß≠', '‡ßÆ', '‡ßØ', '‡ßß‡ß¶', '‡ßß‡ßß', '‡ßß‡ß®', '‡ßß‡ß©', '‡ßß‡ß™', '‡ßß‡ß´', '‡ßß‡ß¨', '‡ßß‡ß≠', '‡ßß‡ßÆ', '‡ßß‡ßØ', '‡ß®‡ß¶', '‡ß®‡ßß', '‡ß®‡ß®', '‡ß®‡ß©', '‡ß®‡ß™', '‡ß®‡ß´', '‡ß®‡ß¨', '‡ß®‡ß≠', '‡ß®‡ßÆ', '‡ß®‡ßØ', '‡ß©‡ß¶', '‡ß©‡ßß']
            },
            en: {
                'app-title': 'Premium Calendar',
                'prayer-checklist': 'Prayer Checklist',
                'daily-routine': 'Daily Routine',
                'weekly-routine-settings': 'Weekly Routine Settings',
                'save-monthly': 'Save for Month',
                'dawn': 'Dawn',
                'morning': 'Morning',
                'noon': 'Noon',
                'afternoon': 'Afternoon',
                'night': 'Night',
                'dawn-routine': 'Dawn Routine',
                'morning-routine': 'Morning Routine',
                'noon-routine': 'Noon Routine',
                'afternoon-routine': 'Afternoon Routine',
                'night-routine': 'Night Routine',
                'dawn-placeholder': 'Write dawn routine...',
                'morning-placeholder': 'Write morning routine...',
                'noon-placeholder': 'Write noon routine...',
                'afternoon-placeholder': 'Write afternoon routine...',
                'night-placeholder': 'Write night routine...',
                'fajr-fard': 'Fard',
                'fajr-sunnah': 'Sunnah',
                'dhuhr-fard': 'Fard',
                'dhuhr-sunnah': 'Sunnah',
                'asr-fard': 'Fard',
                'asr-sunnah': 'Sunnah',
                'maghrib-fard': 'Fard',
                'maghrib-sunnah': 'Sunnah',
                'isha-fard': 'Fard',
                'isha-sunnah': 'Sunnah',
                'witr': 'Wajib',
                'tahajjud': 'Prayer',
                'extra-nafil': 'Voluntary',
                'fajr-time': 'Fajr',
                'dhuhr-time': 'Dhuhr',
                'asr-time': 'Asr',
                'maghrib-time': 'Maghrib',
                'isha-time': 'Isha',
                'witr-time': 'Witr',
                'tahajjud-time': 'Tahajjud',
                'extra-sunnah': 'Extra Nafil',
                'date': 'Date',
                'saved-successfully': 'Saved Successfully!',
                'routine-saved': 'Weekly routine saved successfully!',
                'months': ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
                'days': ['Sat', 'Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri'],
                'dayNumbers': ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31']
            }
        };

        // App State - Use actual current date
        let currentDate = new Date();
        let currentYear = currentDate.getFullYear();
        let currentMonth = currentDate.getMonth();
        let selectedDate = null;
        let tahajjudCount = 0;
        let weeklyRoutines = {};
        let dailyTasks = {};
        let currentLang = 'bn';

        // Initialize
        document.addEventListener('DOMContentLoaded', () => {
            initializeApp();
            loadFromLocalStorage();
            renderCalendar();
            updateLanguage();
            updateTodayHighlight();
            
            // Update today's highlight every minute
            setInterval(updateTodayHighlight, 60000);
        });

        function initializeApp() {
            // Language Toggle
            document.getElementById('langToggle').addEventListener('click', toggleLanguage);
            
            // Theme Toggle
            document.getElementById('themeToggle').addEventListener('click', toggleTheme);
            
            // Year Selector
            document.getElementById('yearSelector').addEventListener('change', (e) => {
                currentYear = parseInt(e.target.value);
                renderCalendar();
            });

            // Navigation
            document.getElementById('prevMonth').addEventListener('click', () => {
                currentMonth--;
                if (currentMonth < 0) {
                    currentMonth = 11;
                    currentYear--;
                }
                renderCalendar();
            });

            document.getElementById('nextMonth').addEventListener('click', () => {
                currentMonth++;
                if (currentMonth > 11) {
                    currentMonth = 0;
                    currentYear++;
                }
                renderCalendar();
            });

            // Modal Controls
            document.getElementById('closeModal').addEventListener('click', closeModal);
            document.getElementById('dailyModal').addEventListener('click', (e) => {
                if (e.target.id === 'dailyModal') closeModal();
            });

            // Settings Modal
            document.getElementById('monthSettings').addEventListener('click', openSettings);
            document.getElementById('closeSettings').addEventListener('click', closeSettings);
            document.getElementById('settingsModal').addEventListener('click', (e) => {
                if (e.target.id === 'settingsModal') closeSettings();
            });

            // Tahajjud Counter
            document.getElementById('tahajjudPlus').addEventListener('click', () => {
                tahajjudCount += 2;
                document.getElementById('tahajjudCount').textContent = tahajjudCount;
                saveDailyTasks();
            });

            document.getElementById('tahajjudMinus').addEventListener('click', () => {
                if (tahajjudCount >= 2) {
                    tahajjudCount -= 2;
                    document.getElementById('tahajjudCount').textContent = tahajjudCount;
                    saveDailyTasks();
                }
            });

            // Save Routine
            document.getElementById('saveRoutine').addEventListener('click', saveMonthlyRoutine);

            // Save daily tasks on change
            document.querySelectorAll('.prayer-checkbox, .routine-checkbox, .routine-input').forEach(input => {
                input.addEventListener('change', saveDailyTasks);
            });
        }

        function updateTodayHighlight() {
            // Remove today class from all days
            document.querySelectorAll('.calendar-day.today').forEach(day => {
                day.classList.remove('today');
            });
            
            // Get current date
            const now = new Date();
            const todayYear = now.getFullYear();
            const todayMonth = now.getMonth();
            const todayDay = now.getDate();
            
            // Add today class to current day if it's in the current month/year
            if (todayYear === currentYear && todayMonth === currentMonth) {
                const dayElements = document.querySelectorAll('.calendar-day:not(.other-month)');
                dayElements.forEach((dayElement, index) => {
                    if (index + 1 === todayDay) {
                        dayElement.classList.add('today');
                    }
                });
            }
        }

        function toggleLanguage() {
            currentLang = currentLang === 'bn' ? 'en' : 'bn';
            document.getElementById('langText').textContent = currentLang === 'bn' ? 'EN' : 'BN';
            updateLanguage();
            renderCalendar();
            saveToLocalStorage();
        }

        function updateLanguage() {
            // Update all elements with data-lang attribute
            document.querySelectorAll('[data-lang]').forEach(element => {
                const key = element.getAttribute('data-lang');
                if (translations[currentLang][key]) {
                    element.textContent = translations[currentLang][key];
                }
            });

            // Update placeholders
            document.querySelectorAll('[data-lang-placeholder]').forEach(element => {
                const key = element.getAttribute('data-lang-placeholder');
                if (translations[currentLang][key]) {
                    element.placeholder = translations[currentLang][key];
                }
            });

            // Update week days in settings
            renderWeekDays();

            // Update year selector options
            const yearSelector = document.getElementById('yearSelector');
            const currentYearNum = new Date().getFullYear();
            yearSelector.innerHTML = `
                <option value="${currentYearNum - 1}">${currentLang === 'bn' ? (currentYearNum - 1).toString().replace(/\d/g, d => '‡ß¶‡ßß‡ß®‡ß©‡ß™‡ß´‡ß¨‡ß≠‡ßÆ‡ßØ'[d]) : currentYearNum - 1}</option>
                <option value="${currentYearNum}">${currentLang === 'bn' ? currentYearNum.toString().replace(/\d/g, d => '‡ß¶‡ßß‡ß®‡ß©‡ß™‡ß´‡ß¨‡ß≠‡ßÆ‡ßØ'[d]) : currentYearNum}</option>
                <option value="${currentYearNum + 1}">${currentLang === 'bn' ? (currentYearNum + 1).toString().replace(/\d/g, d => '‡ß¶‡ßß‡ß®‡ß©‡ß™‡ß´‡ß¨‡ß≠‡ßÆ‡ßØ'[d]) : currentYearNum + 1}</option>
                <option value="${currentYearNum + 2}">${currentLang === 'bn' ? (currentYearNum + 2).toString().replace(/\d/g, d => '‡ß¶‡ßß‡ß®‡ß©‡ß™‡ß´‡ß¨‡ß≠‡ßÆ‡ßØ'[d]) : currentYearNum + 2}</option>
            `;
            yearSelector.value = currentYear;
        }

        function renderWeekDays() {
            const weekDaysContainer = document.getElementById('weekDays');
            weekDaysContainer.innerHTML = '';
            
            translations[currentLang]['days'].forEach((day, index) => {
                const dayTab = document.createElement('div');
                dayTab.className = 'day-tab';
                if (index === 0) dayTab.classList.add('active');
                dayTab.dataset.day = index;
                dayTab.textContent = day;
                dayTab.addEventListener('click', () => {
                    document.querySelectorAll('.day-tab').forEach(t => t.classList.remove('active'));
                    dayTab.classList.add('active');
                    loadWeekDayRoutine(parseInt(dayTab.dataset.day));
                });
                weekDaysContainer.appendChild(dayTab);
            });
        }

        function renderCalendar() {
            // Get the first day of the month (0 = Sunday, 1 = Monday, ..., 6 = Saturday)
            const firstDayOfMonth = new Date(currentYear, currentMonth, 1).getDay();
            
            // Convert JavaScript getDay() to our Bangla calendar system
            // JavaScript: 0=Sun, 1=Mon, 2=Tue, 3=Wed, 4=Thu, 5=Fri, 6=Sat
            // Bangla:    0=Sat, 1=Sun, 2=Mon, 3=Tue, 4=Wed, 5=Thu, 6=Fri
            let firstDayPosition;
            if (firstDayOfMonth === 0) firstDayPosition = 1; // Sunday -> position 1
            else if (firstDayOfMonth === 6) firstDayPosition = 0; // Saturday -> position 0
            else firstDayPosition = firstDayOfMonth + 1; // Monday-Friday -> position 2-6
            
            const daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate();
            const daysInPrevMonth = new Date(currentYear, currentMonth, 0).getDate();

            // Update header
            document.getElementById('currentMonth').textContent = 
                `${translations[currentLang]['months'][currentMonth]} ${currentYear}`;

            // Clear calendar
            const grid = document.getElementById('calendarGrid');
            grid.innerHTML = '';

            // Add day headers - Saturday to Friday
            const dayOrder = [0, 1, 2, 3, 4, 5, 6]; // Sat, Sun, Mon, Tue, Wed, Thu, Fri
            dayOrder.forEach(dayIndex => {
                const dayHeader = document.createElement('div');
                dayHeader.className = 'day-header';
                dayHeader.textContent = translations[currentLang]['days'][dayIndex];
                grid.appendChild(dayHeader);
            });

            // Add previous month days to fill the grid
            for (let i = firstDayPosition - 1; i >= 0; i--) {
                const dayDiv = createDayElement(daysInPrevMonth - i + 1, true, 
                    new Date(currentYear, currentMonth - 1, daysInPrevMonth - i + 1));
                grid.appendChild(dayDiv);
            }

            // Add current month days
            for (let day = 1; day <= daysInMonth; day++) {
                const date = new Date(currentYear, currentMonth, day);
                const dayDiv = createDayElement(day, false, date);
                
                // Check if today
                const now = new Date();
                if (date.toDateString() === now.toDateString()) {
                    dayDiv.classList.add('today');
                }

                // Check if has tasks
                const dateKey = `${currentYear}-${currentMonth}-${day}`;
                if (dailyTasks[dateKey]) {
                    dayDiv.classList.add('has-tasks');
                }

                grid.appendChild(dayDiv);
            }

            // Add next month days to complete the grid
            const totalCells = grid.children.length - 7; // Subtract headers
            const remainingCells = 35 - totalCells;
            for (let day = 1; day <= remainingCells; day++) {
                const dayDiv = createDayElement(day, true, 
                    new Date(currentYear, currentMonth + 1, day));
                grid.appendChild(dayDiv);
            }
        }

        function createDayElement(day, isOtherMonth, date) {
            const dayDiv = document.createElement('div');
            dayDiv.className = 'calendar-day';
            if (isOtherMonth) dayDiv.classList.add('other-month');
            
            const dayNumber = document.createElement('div');
            dayNumber.className = 'day-number';
            dayNumber.textContent = day;
            
            const dayBangla = document.createElement('div');
            dayBangla.className = 'day-bangla';
            dayBangla.textContent = translations[currentLang]['dayNumbers'][day];
            
            dayDiv.appendChild(dayNumber);
            dayDiv.appendChild(dayBangla);
            
            if (!isOtherMonth) {
                dayDiv.addEventListener('click', () => openDailyModal(date));
            }
            
            return dayDiv;
        }

        function openDailyModal(date) {
            selectedDate = date;
            const dateStr = currentLang === 'bn' ? 
                date.toLocaleDateString('bn-BD', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                }) :
                date.toLocaleDateString('en-US', {
                    year: 'numeric',
                    month: 'long',
                    day: 'numeric'
                });
            
            document.getElementById('modalDate').textContent = 
                `${translations[currentLang]['date']}: ${dateStr}`;
            document.getElementById('dailyModal').classList.add('active');
            
            // Load saved data
            loadDailyTasks(date);
            
            // Apply weekly routine
            const dayOfWeek = date.getDay();
            applyWeeklyRoutine(dayOfWeek);
        }

        function closeModal() {
            document.getElementById('dailyModal').classList.remove('active');
            saveDailyTasks();
            renderCalendar();
        }

        function openSettings() {
            document.getElementById('settingsModal').classList.add('active');
            loadWeekDayRoutine(0);
        }

        function closeSettings() {
            document.getElementById('settingsModal').classList.remove('active');
        }

        function loadWeekDayRoutine(dayIndex) {
            const monthKey = `${currentYear}-${currentMonth}`;
            const routine = weeklyRoutines[monthKey]?.[dayIndex] || {
                dawn: '',
                morning: '',
                noon: '',
                afternoon: '',
                night: ''
            };
            
            document.getElementById('editDawn').value = routine.dawn;
            document.getElementById('editMorning').value = routine.morning;
            document.getElementById('editNoon').value = routine.noon;
            document.getElementById('editAfternoon').value = routine.afternoon;
            document.getElementById('editNight').value = routine.night;
        }

        function saveMonthlyRoutine() {
            const activeDay = parseInt(document.querySelector('.day-tab.active').dataset.day);
            const monthKey = `${currentYear}-${currentMonth}`;
            
            if (!weeklyRoutines[monthKey]) {
                weeklyRoutines[monthKey] = {};
            }
            
            weeklyRoutines[monthKey][activeDay] = {
                dawn: document.getElementById('editDawn').value,
                morning: document.getElementById('editMorning').value,
                noon: document.getElementById('editNoon').value,
                afternoon: document.getElementById('editAfternoon').value,
                night: document.getElementById('editNight').value
            };
            
            saveToLocalStorage();
            showToast(translations[currentLang]['routine-saved']);
            closeSettings();
        }

        function applyWeeklyRoutine(dayOfWeek) {
            // Convert JavaScript day index to Bangla calendar day index
            // JavaScript: 0=Sun, 1=Mon, 2=Tue, 3=Wed, 4=Thu, 5=Fri, 6=Sat
            // Bangla:    0=Sat, 1=Sun, 2=Mon, 3=Tue, 4=Wed, 5=Thu, 6=Fri
            let banglaDayIndex;
            if (dayOfWeek === 0) banglaDayIndex = 1; // Sunday -> position 1
            else if (dayOfWeek === 6) banglaDayIndex = 0; // Saturday -> position 0
            else banglaDayIndex = dayOfWeek + 1; // Monday-Friday -> position 2-6
            
            const monthKey = `${currentYear}-${currentMonth}`;
            const routine = weeklyRoutines[monthKey]?.[banglaDayIndex];
            
            if (routine) {
                document.getElementById('dawnRoutine').value = routine.dawn;
                document.getElementById('morningRoutine').value = routine.morning;
                document.getElementById('noonRoutine').value = routine.noon;
                document.getElementById('afternoonRoutine').value = routine.afternoon;
                document.getElementById('nightRoutine').value = routine.night;
            } else {
                // Clear routine inputs if no routine is set for this day
                document.getElementById('dawnRoutine').value = '';
                document.getElementById('morningRoutine').value = '';
                document.getElementById('noonRoutine').value = '';
                document.getElementById('afternoonRoutine').value = '';
                document.getElementById('nightRoutine').value = '';
            }
        }

        function loadDailyTasks(date) {
            const dateKey = `${date.getFullYear()}-${date.getMonth()}-${date.getDate()}`;
            const tasks = dailyTasks[dateKey] || {};
            
            // Load prayer checkboxes
            document.querySelectorAll('.prayer-checkbox').forEach(checkbox => {
                checkbox.checked = tasks.prayers?.[checkbox.id] || false;
            });
            
            // Load tahajjud count
            tahajjudCount = tasks.tahajjudCount || 0;
            document.getElementById('tahajjudCount').textContent = tahajjudCount;
            
            // Load routines (only if they exist for this specific date)
            if (tasks.routines) {
                document.getElementById('dawnRoutine').value = tasks.routines.dawn || '';
                document.getElementById('morningRoutine').value = tasks.routines.morning || '';
                document.getElementById('noonRoutine').value = tasks.routines.noon || '';
                document.getElementById('afternoonRoutine').value = tasks.routines.afternoon || '';
                document.getElementById('nightRoutine').value = tasks.routines.night || '';
                
                // Load routine checkboxes
                document.getElementById('dawnRoutineCheck').checked = tasks.routines.dawnCheck || false;
                document.getElementById('morningRoutineCheck').checked = tasks.routines.morningCheck || false;
                document.getElementById('noonRoutineCheck').checked = tasks.routines.noonCheck || false;
                document.getElementById('afternoonRoutineCheck').checked = tasks.routines.afternoonCheck || false;
                document.getElementById('nightRoutineCheck').checked = tasks.routines.nightCheck || false;
            } else {
                // Clear routine checkboxes if no routine exists
                document.getElementById('dawnRoutineCheck').checked = false;
                document.getElementById('morningRoutineCheck').checked = false;
                document.getElementById('noonRoutineCheck').checked = false;
                document.getElementById('afternoonRoutineCheck').checked = false;
                document.getElementById('nightRoutineCheck').checked = false;
            }
        }

        function saveDailyTasks() {
            if (!selectedDate) return;
            
            const dateKey = `${selectedDate.getFullYear()}-${selectedDate.getMonth()}-${selectedDate.getDate()}`;
            
            const prayers = {};
            document.querySelectorAll('.prayer-checkbox').forEach(checkbox => {
                prayers[checkbox.id] = checkbox.checked;
            });
            
            // Save routines for this specific date only
            const currentRoutines = {
                dawn: document.getElementById('dawnRoutine').value,
                morning: document.getElementById('morningRoutine').value,
                noon: document.getElementById('noonRoutine').value,
                afternoon: document.getElementById('afternoonRoutine').value,
                night: document.getElementById('nightRoutine').value,
                dawnCheck: document.getElementById('dawnRoutineCheck').checked,
                morningCheck: document.getElementById('morningRoutineCheck').checked,
                noonCheck: document.getElementById('noonRoutineCheck').checked,
                afternoonCheck: document.getElementById('afternoonRoutineCheck').checked,
                nightCheck: document.getElementById('nightRoutineCheck').checked
            };
            
            dailyTasks[dateKey] = {
                prayers: prayers,
                tahajjudCount: tahajjudCount,
                routines: currentRoutines
            };
            
            saveToLocalStorage();
        }

        function toggleTheme() {
            const currentTheme = document.documentElement.getAttribute('data-theme');
            const newTheme = currentTheme === 'dark' ? 'light' : 'dark';
            document.documentElement.setAttribute('data-theme', newTheme);
            localStorage.setItem('theme', newTheme);
        }

        function saveToLocalStorage() {
            localStorage.setItem('calendarTheme', document.documentElement.getAttribute('data-theme') || 'light');
            localStorage.setItem('calendarLang', currentLang);
            localStorage.setItem('weeklyRoutines', JSON.stringify(weeklyRoutines));
            localStorage.setItem('dailyTasks', JSON.stringify(dailyTasks));
        }

        function loadFromLocalStorage() {
            // Load theme
            const savedTheme = localStorage.getItem('calendarTheme') || 'light';
            document.documentElement.setAttribute('data-theme', savedTheme);
            
            // Load language
            const savedLang = localStorage.getItem('calendarLang') || 'bn';
            currentLang = savedLang;
            document.getElementById('langText').textContent = currentLang === 'bn' ? 'EN' : 'BN';
            
            // Load routines
            const savedRoutines = localStorage.getItem('weeklyRoutines');
            if (savedRoutines) {
                weeklyRoutines = JSON.parse(savedRoutines);
            }
            
            // Load daily tasks
            const savedTasks = localStorage.getItem('dailyTasks');
            if (savedTasks) {
                dailyTasks = JSON.parse(savedTasks);
            }
        }

        function showToast(message) {
            const toast = document.getElementById('toast');
            document.getElementById('toastMessage').textContent = message;
            toast.classList.add('show');
            
            setTimeout(() => {
                toast.classList.remove('show');
            }, 3000);
        }
    </script>
</body>
</html>
